// Problem 12
//The sequence of triangle numbers is generated by adding the natural numbers.So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
//1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
//Let us list the factors of the first seven triangle numbers:
//1: 1
//3: 1, 3
//6: 1, 2, 3, 6
//10: 1, 2, 5, 10
//15: 1, 3, 5, 15
//21: 1, 3, 7, 21
//28: 1, 2, 4, 7, 14, 28
//We can see that 28 is the first triangle number to have over five divisors.
//What is the value of the first triangle number to have over five hundred divisors?
//function triangleNumber(n: number): number {
//    let result: number = 0;
//    for (let i = 0; i <= n; i++) {
//        result += i;
//    }
//    return result;
//}
//function getDivisors(n: number): number[] {
//    let divisors: number[] = [];
//    const upper: number = Math.floor(n / 2);
//    divisors.push(1);
//    for (let i = 2; i <= upper; i++) {
//        if (n % i === 0) divisors.push(i);
//    }
//    divisors.push(n);
//    return divisors;
//}
//let divisors: number[] = [];
//let n = 0;
//let triangleNum = 0;
//do {
//    n++;
//    triangleNum = triangleNumber(n);
//    divisors = getDivisors(triangleNum);
//} while (divisors.length < 501)
//console.log(divisors);
//console.log(triangleNum);
var test = "hello world";
//# sourceMappingURL=app.js.map